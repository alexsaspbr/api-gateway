version: '3'

services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2023!
    ports:
      - "27017:27017"
    volumes:
      - /home/alexaraujo/development/docker/volumes/mongodb:/data/db
    networks:
      - mongo-compose-network

  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2023!
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2023!
    networks:
      - mongo-compose-network

  products:
    image: ecommerce/products:latest
    build:
      context: .
    container_name: products
    depends_on:
      - mongo
    ports:
      - '8080:8080'  
    environment:
      - SPRING_MONGODB_HOST=mongo
      - SPRING_MONGODB_PORT=27017
      - SPRING_MONGODB_USERNAME=root
      - SPRING_MONGODB_PASSWORD=MongoDB2023!
    networks:
      - mongo-compose-network

  shop:
    image: ecommerce/shop:latest
    build:
      context: .
    container_name: shop
    depends_on:
      - products
    ports:
      - '8082:8082'
    networks:
      - mongo-compose-network

  api-gateway:
    image: ecommerce/api-gateway:latest
    build:
      context: .
    container_name: api-gateway
    depends_on:
      - mongo
      - products
      - shop
    ports:
      - '8083:8083'
    networks:
      - mongo-compose-network

networks: 
    mongo-compose-network:
      driver: bridge